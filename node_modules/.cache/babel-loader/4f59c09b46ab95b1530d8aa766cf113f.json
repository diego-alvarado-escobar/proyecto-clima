{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alvar\\\\OneDrive\\\\Proyectos\\\\TestBanco\\\\proyectoclima\\\\produccion\\\\src\\\\Components\\\\LineChart.js\";\nimport React, { Component } from 'react';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    var margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 40\n    },\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    var svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // get the data\n\n    d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv\", function (data) {\n      // X axis: scale and draw:\n      var x = d3.scaleLinear().domain([0, 1000]) // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n      .range([0, width]);\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // set the parameters for the histogram\n\n      var histogram = d3.histogram().value(function (d) {\n        return d.price;\n      }) // I need to give the vector of value\n      .domain(x.domain()) // then the domain of the graphic\n      .thresholds(x.ticks(70)); // then the numbers of bins\n      // And apply this function to data to get the bins\n\n      var bins = histogram(data); // Y axis: scale and draw:\n\n      var y = d3.scaleLinear().range([height, 0]);\n      y.domain([0, d3.max(bins, function (d) {\n        return d.length;\n      })]); // d3.hist has to be called before the Y axis obviously\n\n      svg.append(\"g\").call(d3.axisLeft(y)); // Add a tooltip div. Here I define the general feature of the tooltip: stuff that do not depend on the data point.\n      // Its opacity is set to 0: we don't see it by default.\n\n      var tooltip = d3.select(\"#my_dataviz\").append(\"div\").style(\"opacity\", 0).attr(\"class\", \"tooltip\").style(\"background-color\", \"black\").style(\"color\", \"white\").style(\"border-radius\", \"5px\").style(\"padding\", \"10px\"); // A function that change this tooltip when the user hover a point.\n      // Its opacity is set to 1: we can now see it. Plus it set the text and position of tooltip depending on the datapoint (d)\n\n      var showTooltip = function (d) {\n        tooltip.transition().duration(100).style(\"opacity\", 1);\n        tooltip.html(\"Range: \" + d.x0 + \" - \" + d.x1).style(\"left\", d3.mouse(this)[0] + 20 + \"px\").style(\"top\", d3.mouse(this)[1] + \"px\");\n      };\n\n      var moveTooltip = function (d) {\n        tooltip.style(\"left\", d3.mouse(this)[0] + 20 + \"px\").style(\"top\", d3.mouse(this)[1] + \"px\");\n      }; // A function that change this tooltip when the leaves a point: just need to set opacity to 0 again\n\n\n      var hideTooltip = function (d) {\n        tooltip.transition().duration(100).style(\"opacity\", 0);\n      }; // append the bar rectangles to the svg element\n\n\n      svg.selectAll(\"rect\").data(bins).enter().append(\"rect\").attr(\"x\", 1).attr(\"transform\", function (d) {\n        return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\";\n      }).attr(\"width\", function (d) {\n        return x(d.x1) - x(d.x0) - 1;\n      }).attr(\"height\", function (d) {\n        return height - y(d.length);\n      }).style(\"fill\", \"#69b3a2\") // Show tooltip on hover\n      .on(\"mouseover\", showTooltip).on(\"mousemove\", moveTooltip).on(\"mouseleave\", hideTooltip);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"my_dataviz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["C:/Users/alvar/OneDrive/Proyectos/TestBanco/proyectoclima/produccion/src/Components/LineChart.js"],"names":["React","Component","render","LineChart","constructor","props","myRef","createRef","componentDidMount","margin","top","right","bottom","left","width","height","svg","d3","select","append","attr","csv","data","x","scaleLinear","domain","range","call","axisBottom","histogram","value","d","price","thresholds","ticks","bins","y","max","length","axisLeft","tooltip","style","showTooltip","transition","duration","html","x0","x1","mouse","moveTooltip","hideTooltip","selectAll","enter","on"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from '@testing-library/react';\r\n\r\nclass LineChart extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount () {\r\n\r\n\t\tvar margin = {top: 10, right: 30, bottom: 30, left: 40},\r\n\t\twidth = 460 - margin.left - margin.right,\r\n\t\theight = 400 - margin.top - margin.bottom;\r\n\t\r\n\t// append the svg object to the body of the page\r\n\tvar svg = d3.select(\"#my_dataviz\")\r\n\t  .append(\"svg\")\r\n\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t  .append(\"g\")\r\n\t\t.attr(\"transform\",\r\n\t\t\t  \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\t\r\n\t// get the data\r\n\td3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv\", function(data) {\r\n\t\r\n\t  // X axis: scale and draw:\r\n\t  var x = d3.scaleLinear()\r\n\t\t  .domain([0, 1000])     // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\r\n\t\t  .range([0, width]);\r\n\t  svg.append(\"g\")\r\n\t\t  .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n\t\t  .call(d3.axisBottom(x));\r\n\t\r\n\t  // set the parameters for the histogram\r\n\t  var histogram = d3.histogram()\r\n\t\t  .value(function(d) { return d.price; })   // I need to give the vector of value\r\n\t\t  .domain(x.domain())  // then the domain of the graphic\r\n\t\t  .thresholds(x.ticks(70)); // then the numbers of bins\r\n\t\r\n\t  // And apply this function to data to get the bins\r\n\t  var bins = histogram(data);\r\n\t\r\n\t  // Y axis: scale and draw:\r\n\t  var y = d3.scaleLinear()\r\n\t\t  .range([height, 0]);\r\n\t\t  y.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\r\n\t  svg.append(\"g\")\r\n\t\t  .call(d3.axisLeft(y));\r\n\t\r\n\t  // Add a tooltip div. Here I define the general feature of the tooltip: stuff that do not depend on the data point.\r\n\t  // Its opacity is set to 0: we don't see it by default.\r\n\t  var tooltip = d3.select(\"#my_dataviz\")\r\n\t\t.append(\"div\")\r\n\t\t.style(\"opacity\", 0)\r\n\t\t.attr(\"class\", \"tooltip\")\r\n\t\t.style(\"background-color\", \"black\")\r\n\t\t.style(\"color\", \"white\")\r\n\t\t.style(\"border-radius\", \"5px\")\r\n\t\t.style(\"padding\", \"10px\")\r\n\t\r\n\t  // A function that change this tooltip when the user hover a point.\r\n\t  // Its opacity is set to 1: we can now see it. Plus it set the text and position of tooltip depending on the datapoint (d)\r\n\t  var showTooltip = function(d) {\r\n\t\ttooltip\r\n\t\t  .transition()\r\n\t\t  .duration(100)\r\n\t\t  .style(\"opacity\", 1)\r\n\t\ttooltip\r\n\t\t  .html(\"Range: \" + d.x0 + \" - \" + d.x1)\r\n\t\t  .style(\"left\", (d3.mouse(this)[0]+20) + \"px\")\r\n\t\t  .style(\"top\", (d3.mouse(this)[1]) + \"px\")\r\n\t  }\r\n\t  var moveTooltip = function(d) {\r\n\t\ttooltip\r\n\t\t.style(\"left\", (d3.mouse(this)[0]+20) + \"px\")\r\n\t\t.style(\"top\", (d3.mouse(this)[1]) + \"px\")\r\n\t  }\r\n\t  // A function that change this tooltip when the leaves a point: just need to set opacity to 0 again\r\n\t  var hideTooltip = function(d) {\r\n\t\ttooltip\r\n\t\t  .transition()\r\n\t\t  .duration(100)\r\n\t\t  .style(\"opacity\", 0)\r\n\t  }\r\n\t\r\n\t  // append the bar rectangles to the svg element\r\n\t  svg.selectAll(\"rect\")\r\n\t\t  .data(bins)\r\n\t\t  .enter()\r\n\t\t  .append(\"rect\")\r\n\t\t\t.attr(\"x\", 1)\r\n\t\t\t.attr(\"transform\", function(d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\r\n\t\t\t.attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\r\n\t\t\t.attr(\"height\", function(d) { return height - y(d.length); })\r\n\t\t\t.style(\"fill\", \"#69b3a2\")\r\n\t\t\t// Show tooltip on hover\r\n\t\t\t.on(\"mouseover\", showTooltip )\r\n\t\t\t.on(\"mousemove\", moveTooltip )\r\n\t\t\t.on(\"mouseleave\", hideTooltip )\r\n\t\r\n\t});\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"my_dataviz\"></div>\r\n    };\r\n}\r\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}