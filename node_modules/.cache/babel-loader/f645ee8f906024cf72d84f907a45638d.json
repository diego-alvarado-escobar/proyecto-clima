{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alvar\\\\OneDrive\\\\Proyectos\\\\TestBanco\\\\proyectoclima\\\\produccion\\\\src\\\\Components\\\\LineChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    var margin = {\n      top: 50,\n      left: 60,\n      bottom: 15,\n      right: 0\n    },\n        width = 700 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n    var svg = d3.select(\".test-container\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom);\n    var y = d3.scaleLinear().range([height - margin.bottom, margin.top]);\n    var x = d3.scaleBand().range([margin.left, width - margin.right]).paddingOuter(0.4).paddingInner(0.3); //DEFINIENDO ESTILO PARA EJE X, EJE Y Y BARRAS\n\n    var xAxisGroup = svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"color\", \"black\").attr(\"transform\", \"translate(0, \" + (height - 15) + \")\");\n    var yAxisGroup = svg.append(\"g\").attr(\"class\", \"y axis\").attr(\"color\", \"black\"); //IMPORTANDO LOS DATOS\n\n    d3.csv('https://raw.githubusercontent.com/diazmonica/covid/main/Book1.csv').then(data => {\n      data = data.map(({\n        Mes,\n        valor\n      }) => ({\n        x: Mes,\n        value: valor\n      }));\n      data = [{\n        columns: ['fecha', 'baja', 'alta']\n      }, {\n        x: '24-Apr-07',\n        valueL: 52.24,\n        valueH: 93.24\n      }, {\n        x: '25-Apr-07',\n        valueL: 65.23,\n        valueH: 95.35\n      }, {\n        x: '26-Apr-07',\n        valueL: 58.65,\n        valueH: 98.84\n      }, {\n        x: '27-Apr-07',\n        valueL: 62.52,\n        valueH: 99.92\n      }, {\n        x: '30-Apr-07',\n        valueL: 61.87,\n        valueH: 99.80\n      }, {\n        x: '01-May-07',\n        valueL: 59.12,\n        valueH: 99.47\n      }];\n      console.log('====================================');\n      console.log(data);\n      console.log('====================================');\n      var height = 500;\n      var groupKey = data[0].columns[0];\n      var keys = data[0].columns.slice(1);\n      var color = d3.scaleOrdinal().range([\"#98abc5\", \"#ff8c00\"]);\n\n      var legend = svg => {\n        const g = svg.attr(\"transform\", `translate(${width},0)`).attr(\"text-anchor\", \"end\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).selectAll(\"g\").data(color.domain().slice().reverse()).join(\"g\").attr(\"transform\", (d, i) => `translate(0,${i * 20})`);\n        g.append(\"rect\").attr(\"x\", -19).attr(\"width\", 19).attr(\"height\", 19).attr(\"fill\", color);\n        g.append(\"text\").attr(\"x\", -24).attr(\"y\", 9.5).attr(\"dy\", \"0.35em\").text(d => d);\n      };\n\n      var x0 = d3.scaleBand().domain(data.map(d => d[groupKey])).rangeRound([margin.left, width - margin.right]).paddingInner(0.1);\n      var x1 = d3.scaleBand().domain(keys).rangeRound([0, x0.bandwidth()]).padding(0.05);\n      var y = d3.scaleLinear().domain([0, d3.max(data, d => d3.max(keys, key => d[key]))]).nice().rangeRound([height - margin.bottom, margin.top]);\n\n      var xAxis = g => g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x0).tickSizeOuter(0)).call(g => g.select(\".domain\").remove());\n\n      var yAxis = g => g.attr(\"transform\", `translate(${margin.left},0)`).call(d3.axisLeft(y).ticks(null, \"s\")).call(g => g.select(\".domain\").remove()).call(g => g.select(\".tick:last-of-type text\").clone().attr(\"x\", 3).attr(\"text-anchor\", \"start\").attr(\"font-weight\", \"bold\").text(data.y));\n\n      const svg = d3.select(\".test-container\");\n      svg.append(\"g\").selectAll(\"g\").data(data).join(\"g\").attr(\"transform\", d => `translate(${x0(d[groupKey])},0)`).selectAll(\"rect\").data(d => keys.map(key => ({\n        key,\n        value: d[key]\n      }))).join(\"rect\").attr(\"x\", d => x1(d.x)).attr(\"y\", d => y(d.valueH)).attr(\"width\", x1.bandwidth()).attr(\"height\", d => y(0) - y(d.valueH)).attr(\"fill\", d => color(d.key));\n      svg.append(\"g\").call(xAxis);\n      svg.append(\"g\").call(yAxis);\n      svg.append(\"g\").call(legend);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pruebas\",\n      style: {\n        'background': 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["C:/Users/alvar/OneDrive/Proyectos/TestBanco/proyectoclima/produccion/src/Components/LineChart.js"],"names":["React","Component","d3","LineChart","constructor","props","myRef","createRef","componentDidMount","margin","top","left","bottom","right","width","height","svg","select","append","attr","y","scaleLinear","range","x","scaleBand","paddingOuter","paddingInner","xAxisGroup","yAxisGroup","csv","then","data","map","Mes","valor","value","columns","valueL","valueH","console","log","groupKey","keys","slice","color","scaleOrdinal","legend","g","selectAll","domain","reverse","join","d","i","text","x0","rangeRound","x1","bandwidth","padding","max","key","nice","xAxis","call","axisBottom","tickSizeOuter","remove","yAxis","axisLeft","ticks","clone","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass LineChart extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.myRef = React.createRef();\r\n    }\r\n\t\r\n\r\n    componentDidMount () {\r\n\r\n\t\tvar margin = { top: 50, left: 60, bottom: 15, right: 0 },\r\n            width = 700 - margin.left - margin.right,\r\n            height = 500 - margin.top - margin.bottom;\r\n\r\nvar svg = d3.select(\".test-container\").append(\"svg\")\r\n    .attr(\"width\", width + margin.left + margin.right)\r\n    .attr(\"height\", height + margin.top + margin.bottom);\r\n\r\nvar y = d3.scaleLinear()\r\n    .range([height - margin.bottom, margin.top])\r\n\r\nvar x = d3.scaleBand()\r\n    .range([margin.left, width - margin.right])\r\n    .paddingOuter(0.4)\r\n    .paddingInner(0.3)\r\n\r\n\r\n//DEFINIENDO ESTILO PARA EJE X, EJE Y Y BARRAS\r\nvar xAxisGroup = svg.append(\"g\")\r\n    .attr(\"class\", \"x axis\")\r\n    .attr(\"color\", \"black\")\r\n    .attr(\"transform\", \"translate(0, \" + (height - 15) + \")\");\r\n\r\nvar yAxisGroup = svg.append(\"g\")\r\n    .attr(\"class\", \"y axis\")\r\n    .attr(\"color\", \"black\");\r\n\r\n//IMPORTANDO LOS DATOS\r\nd3.csv('https://raw.githubusercontent.com/diazmonica/covid/main/Book1.csv').then(data => {\r\n    data = data.map(({ Mes, valor }) => ({ x: Mes, value: valor }));\r\n    data = [\r\n        {columns: ['fecha', 'baja', 'alta']},\r\n        {x: '24-Apr-07', valueL: 52.24, valueH: 93.24},\r\n        {x: '25-Apr-07', valueL: 65.23, valueH: 95.35},\r\n        {x: '26-Apr-07', valueL: 58.65, valueH: 98.84},\r\n        {x: '27-Apr-07', valueL: 62.52, valueH: 99.92},\r\n        {x: '30-Apr-07', valueL: 61.87, valueH: 99.80},\r\n        {x: '01-May-07', valueL: 59.12, valueH: 99.47}\r\n      ];\r\n\r\n    console.log('====================================');\r\n    console.log(data);\r\n    console.log('====================================');\r\n    var height = 500\r\n    var groupKey = data[0].columns[0]\r\n    var keys = data[0].columns.slice(1)\r\n\r\n    var color = d3.scaleOrdinal()\r\n    .range([\"#98abc5\", \"#ff8c00\"])\r\n\r\n    var legend = svg => {\r\n        const g = svg\r\n            .attr(\"transform\", `translate(${width},0)`)\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", 10)\r\n          .selectAll(\"g\")\r\n          .data(color.domain().slice().reverse())\r\n          .join(\"g\")\r\n            .attr(\"transform\", (d, i) => `translate(0,${i * 20})`);\r\n      \r\n        g.append(\"rect\")\r\n            .attr(\"x\", -19)\r\n            .attr(\"width\", 19)\r\n            .attr(\"height\", 19)\r\n            .attr(\"fill\", color);\r\n      \r\n        g.append(\"text\")\r\n            .attr(\"x\", -24)\r\n            .attr(\"y\", 9.5)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(d => d);\r\n      }\r\n\r\n    var x0 = d3.scaleBand()\r\n    .domain(data.map(d => d[groupKey]))\r\n    .rangeRound([margin.left, width - margin.right])\r\n    .paddingInner(0.1)\r\n    \r\n    var x1 = d3.scaleBand()\r\n    .domain(keys)\r\n    .rangeRound([0, x0.bandwidth()])\r\n    .padding(0.05)\r\n\r\n    var y = d3.scaleLinear()\r\n    .domain([0, d3.max(data, d => d3.max(keys, key => d[key]))]).nice()\r\n    .rangeRound([height - margin.bottom, margin.top])\r\n\r\n    var xAxis = g => g\r\n    .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n    .call(d3.axisBottom(x0).tickSizeOuter(0))\r\n    .call(g => g.select(\".domain\").remove())\r\n\r\n    var yAxis = g => g\r\n    .attr(\"transform\", `translate(${margin.left},0)`)\r\n    .call(d3.axisLeft(y).ticks(null, \"s\"))\r\n    .call(g => g.select(\".domain\").remove())\r\n    .call(g => g.select(\".tick:last-of-type text\").clone()\r\n        .attr(\"x\", 3)\r\n        .attr(\"text-anchor\", \"start\")\r\n        .attr(\"font-weight\", \"bold\")\r\n        .text(data.y))\r\n\r\n    const svg = d3.select(\".test-container\");\r\n\r\n    svg.append(\"g\")\r\n        .selectAll(\"g\")\r\n        .data(data)\r\n        .join(\"g\")\r\n        .attr(\"transform\", d => `translate(${x0(d[groupKey])},0)`)\r\n        .selectAll(\"rect\")\r\n        .data(d => keys.map(key => ({key, value: d[key]})))\r\n        .join(\"rect\")\r\n        .attr(\"x\", d => x1(d.x))\r\n        .attr(\"y\", d => y(d.valueH))\r\n        .attr(\"width\", x1.bandwidth())\r\n        .attr(\"height\", d => y(0) - y(d.valueH))\r\n        .attr(\"fill\", d => color(d.key));\r\n    \r\n    svg.append(\"g\")\r\n        .call(xAxis);\r\n    \r\n    svg.append(\"g\")\r\n        .call(yAxis);\r\n    \r\n    svg.append(\"g\")\r\n        .call(legend);\r\n\r\n});\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"pruebas\" style={{'background': 'white'}}>\r\n\t\t<div className=\"test-container\">\r\n\t\t  <div className=\"filter\">\r\n\t\t  </div>\r\n\t  </div>\r\n\t  </div>\r\n    };\r\n}\r\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}